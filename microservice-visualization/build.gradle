plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'maven-publish'
}

group = 'com.github.rbaul'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.flywaydb:flyway-core'


    // OpenApi
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.+'

    // Model mapper
    implementation 'org.modelmapper.extensions:modelmapper-spring:3.1.+'

	// GitHub
	implementation 'org.kohsuke:github-api:1.318'


	// WebApp
    implementation project(':microservice-visualization-webapp')

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
//			from components.java
			artifact(tasks.bootJar)
		}
	}

	repositories {
		maven {
			name = rootProject.name
			url = "https://maven.pkg.github.com/rbaul/microservice-visualization"
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
				password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
			}
		}
	}
}
